---
// src/pages/projects/[slug].astro
import { getCollection, type CollectionEntry } from "astro:content";
import type { ProjectSchema } from "../../content/config";
import BaseLayout from "../../layouts/BaseLayout.astro";
import ProjectDetails from "../../components/ProjectDetails.astro";
import { getProjectLink } from "../../utils/links";

// Define getStaticPaths to generate all possible routes
export async function getStaticPaths() {
    const projects = await getCollection("projects");
    const sortedProjects = projects.sort(
        (a: CollectionEntry<"projects">, b: CollectionEntry<"projects">) =>
            a.data.order - b.data.order,
    );

    return sortedProjects.map((project, index) => {
        const nextProject = sortedProjects[(index + 1) % sortedProjects.length];
        // Calculate previous project index, handling wrap-around
        const prevIndex =
            (index - 1 + sortedProjects.length) % sortedProjects.length;
        const prevProject = sortedProjects[prevIndex];

        return {
            params: { slug: project.slug },
            props: { project, nextProject, prevProject },
        };
    });
}

// Get the props passed from getStaticPaths
const { project, nextProject, prevProject } = Astro.props;
---

<BaseLayout
    backgroundColor={project.data.backgroundColor}
    title={project.data.title}
    metaDescription={project.data.metaDescription}
    metaKeywords={project.data.metaKeywords}
    pageType="projects"
>
    <div class="projectnavig-cont">
        <div class="projectnavig">
            <a
                class="projectnavig-prev"
                href={getProjectLink(prevProject.slug)}
            >
                {prevProject.data.title.toUpperCase()}
            </a>
            <a
                class="projectnavig-following"
                href={getProjectLink(nextProject.slug)}
            >
                {nextProject.data.title.toUpperCase()}
            </a>
        </div>
    </div>

    <ProjectDetails project={project} />
</BaseLayout>
