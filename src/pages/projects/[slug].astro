---
// src/pages/projects/[slug].astro

import { getCollection, type CollectionEntry } from "astro:content";
import type { ProjectSchema } from "../../content/config";
import BaseLayout from "../../layouts/BaseLayout.astro";
import { Image } from "astro:assets";
import { getProjectLink } from "../../utils/links";

// Fetch all projects
const projects = await getCollection("projects");

// Sort projects by order
const sortedProjects = projects.sort(
    (a: CollectionEntry<"projects">, b: CollectionEntry<"projects">) =>
        a.data.order - b.data.order,
);

// Get the current slug from params
const { slug } = Astro.params;

// Find the index of the current project
const projectIndex = sortedProjects.findIndex((p) => p.slug === slug);

// Handle case where project is not found
if (projectIndex === -1) {
    throw new Error(`Project with slug "${slug}" not found`);
}

// Get the current project and the next project
const project = sortedProjects[projectIndex];
const nextProject = sortedProjects[(projectIndex + 1) % sortedProjects.length];
---

<BaseLayout
    backgroundColor={project.data.backgroundColor}
    title={project.data.title}
    metaDescription={project.data.metaDescription}
    metaKeywords={project.data.metaKeywords}
    pageType="projects"
>
    <div class="projectnavig-cont">
        <div class="projectnavig">
            <a
                class="projectnavig-following"
                href={getProjectLink(nextProject.slug)}
            >
                {nextProject.data.title.toUpperCase()}
            </a>
        </div>
    </div>

    <div class="detailslist" id="scrollpager">
        <div class="detailslist-desc">
            <p><strong>{project.data.title}</strong></p>
        </div>

        {
            project.data.images.map(
                (image: ProjectSchema["images"][0], index: number) => (
                    <div class="detailslist-item">
                        <p class="t-counter">
                            {index + 1}/{project.data.images.length}
                        </p>
                        <Image
                            src={image.default}
                            width={1300}
                            height={860}
                            alt={image.title}
                            loading={index === 0 ? "eager" : "lazy"}
                        />
                        <p class="t-desc">{image.description || ""}</p>
                    </div>
                ),
            )
        }
    </div>
</BaseLayout>
